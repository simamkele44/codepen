{"version":3,"sources":["hooks/useLocalStorage.js","components/Converter.js","components/Editor.js","components/Files.js","components/App.js","index.js"],"names":["PREFIX","useLocalStorage","key","initialValue","prefixedKey","_useState","useState","jsonValue","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","value","setValue","useEffect","setItem","stringify","findClassName","java_code","undefined","class_index","indexOf","endclass_index","substring","findVariables","start_constructor","variable_arr","split","temp_obj","i","length","variable_line","arrlist_type","ds_type","lastIndexOf","includes","data_type","findAllOccurrences","str","substr","result","idx","toLowerCase","push","findFunctions","end_constructor_params","start_assigns","end_assigns","below_contructor","after_close_white_spaces","below_const_rebuilt","potential_methods","no_args_methods","non_args_methods","type_and_name","return_type","index","splice","args_methods","open_brac_pos","count_strs","args_str","single_args_arr","test","endtype_pos","count_sp","arguments","Editor","props","language","displayName","onChange","open","setOpen","_useLocalStorage","_useLocalStorage2","active_file","setActiveFile","_useLocalStorage3","Student.java","Node.java","Stack.java","Employee.java","_useLocalStorage4","files_data","setFilesData","_useState3","_useState4","java_editor","setJavaEditorData","_useState5","_useState6","ts_editor","setTsEditor","handleChange","editor","data","code_val","interpolate","text","handleUpdate","String","prototype","params","names","keys","vals","values","construct","Function","toConsumableArray","concat","this","apply","fn_value","filedata","objectSpread2","updateInterface","err","console","log","interface_line","final_attrs","attrs","_i","_Object$keys","attr_name","attr_type","att","_i2","_Object$keys2","final_methods","all_methods","_i3","_Object$keys3","_i4","_Object$keys4","_i5","_Object$keys5","_i6","_Object$keys6","the_type","argu","replace","attr_line","container","useRef","_useState7","_useState8","loading","setLoading","lottie","loadAnimation","current","render","loop","autoplay","animationData","require","setTimeout","react_default","a","createElement","className","type","onClick","prevOpen","index_es","icon","faCompressAlt","faExpandAlt","ts","si_index_esm","index_esm","md_index_esm","window","location","reload","RunBtn","react_codemirror2","onBeforeChange","options","lineWrapping","lint","mode","theme","lineNumbers","Fragment","LoadingOverlay","ref","styled","div","_templateObject","taggedTemplateLiteral","_templateObject2","Files","file_hover","setFileHover","file_input","setFileInput","filelist_hover","setFileListHover","files","setFiles","_useState9","_useState10","setFnValue","FilesContainer","CollapseItem","TopItem","CollapseLabel","vsc_index_esm","UploadFiles","ai_index_esm","onMouseOver","onMouseOut","BottomItems","map","item","File","FileName","ri_index_esm","temp_arr","filtered","filter","arr","e","target","onBlur","pop","autoFocus","Files_templateObject","Files_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","App","html","java","setJava","_useLocalStorage5","_useLocalStorage6","js","setJs","setSrcDoc","timeout","clearTimeout","href","bs_index_esm","components_Files","ReactDOM","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.417ac0c3.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useState, useEffect } from 'react';\n\nexport const java_code = `\npackage DevideAndConqurer;\n\npublic class Node {\n    public int data;\n    Node left_child;\n    Node right_child;\n    Node parent;\n\n    Node(int data, Node new_node) {\n        this.data = data;\n        left_child = null;\n        right_child = null;\n        parent = null;\n    }\n\n    public int getData() {\n        return data;\n    }\n\n    public void doStuff(int data) {\n        int ab = data;\n    }\n\n    public int doStuffAgain(int data, int left, int right) {\n        int abc = data;\n        return abc;\n    }\n\n    public Node getLeftChild() {\n        return left_child;\n    }\n\n    public Node getRightChild() {\n        return right_child;\n    }\n\n}    \n`;\n\nexport const findClassName = (java_code) =>{\n    if(java_code!=undefined){\n        let class_index = java_code.indexOf(\"class\");\n        let endclass_index = java_code.indexOf(\" {\");\n        let class_name = java_code.substring(class_index+6, endclass_index);\n        return class_name;\n    }else{\n        return \"\"\n    }\n\n    \n}\n\nexport const findVariables = (java_code) =>{\n    if(java_code!== undefined){\n        let endclass_index = java_code.indexOf(\" {\");\n        let start_constructor = java_code.indexOf(findClassName(java_code)+\"(\");\n        let varibles_container = java_code.substring(endclass_index+2, start_constructor);\n        let variable_arr = varibles_container.split(\";\");\n    \n        let temp_obj = {}\n        for(let i=0; i<variable_arr.length-1; i++){\n            let variable_line = variable_arr[i].split(\" \");\n            let arrlist_type = variable_line[variable_line.length-2];\n            var ds_type = arrlist_type.substring(\n                arrlist_type.indexOf(\"<\") + 1, \n                arrlist_type.lastIndexOf(\">\")\n            );\n\n            // Detect data structures\n            if(arrlist_type.includes(\"ArrayList\")) {\n                temp_obj[variable_line[variable_line.length-1]] = {\n                    data_type: ds_type+\"[]\"\n                };\n            }else{\n                temp_obj[variable_line[variable_line.length-1]] = {\n                    data_type: variable_line[variable_line.length-2]\n                };\n            }\n\n        }\n    \n        return temp_obj;\n    }else{\n        return \"\"\n    }\n\n    \n}\n\nexport const findConstructor = (java_code) => {\n    let start_constructor = java_code.indexOf(findClassName(java_code)+\"(\");\n    let end_constructor_params = java_code.indexOf(\")\", start_constructor+findClassName(java_code).length+1);\n    let constructor_params = java_code.substring(start_constructor+findClassName(java_code).length+1, end_constructor_params);\n    let params_arr = constructor_params.split(',');\n\n    let temp_obj = {}\n    for(let i=0; i<params_arr.length; i++){\n        let variable_line = params_arr[i].split(\" \");\n        temp_obj[variable_line[variable_line.length-1]] = {\n            data_type: variable_line[variable_line.length-2]\n        };\n    }\n\n    return temp_obj;\n}\n\nexport const getConstructorAssignments = (java_code) =>{\n    let start_constructor = java_code.indexOf(findClassName(java_code)+\"(\");\n    let end_constructor_params = java_code.indexOf(\")\", start_constructor+findClassName(java_code).length+1);\n    let start_assigns = java_code.indexOf(\"{\",end_constructor_params);\n    let end_assigns = java_code.indexOf(\"}\",start_assigns);\n    let assigns_container = java_code.substring(start_assigns+1, end_assigns-1);\n    let assigns_arr = assigns_container.split(\";\");\n    \n    let temp_obj = {}\n    for(let i=0; i<assigns_arr.length-1; i++){\n        let variable_line = assigns_arr[i].split(\" = \");\n        \n        temp_obj[variable_line[variable_line.length-2].replace('\\n', ' ')] = {\n            value: variable_line[variable_line.length-1]\n        };\n    }\n\n    return temp_obj;\n\n}\n\nconst findAllOccurrences = (str, substr) => {\n    str = str.toLowerCase();\n    \n    let result = [];\n  \n    let idx = str.indexOf(substr)\n    \n    while (idx !== -1) {\n      result.push(idx);\n      idx = str.indexOf(substr, idx+1);\n    }\n    return result;\n}\n\nexport const findFunctions = (java_code) =>{\n    if(java_code!=undefined){\n        let start_constructor = java_code.indexOf(findClassName(java_code)+\"(\");\n        let end_constructor_params = java_code.indexOf(\")\", start_constructor+findClassName(java_code).length+1);\n        let start_assigns = java_code.indexOf(\"{\",end_constructor_params);\n        let end_assigns = java_code.indexOf(\"}\",start_assigns);\n        let below_contructor = java_code.substring(end_assigns+1);\n        let after_close_white_spaces = findAllOccurrences(below_contructor, \") \");\n        let below_const_rebuilt = \"\"; // below ciontructor without any ) { (white space removal)\n        for(let i = 0; i < after_close_white_spaces.length; i++) {\n            if(i==0){\n                below_const_rebuilt += below_contructor.substring(0,after_close_white_spaces[0]+1);\n            }else{\n                below_const_rebuilt += below_contructor.substring(after_close_white_spaces[i-1]+2,after_close_white_spaces[i]+1);\n            }\n        }\n    \n        below_const_rebuilt += below_contructor.substring(after_close_white_spaces[after_close_white_spaces.length-1]+2);\n    \n        //console.log(\"rebult: \"+below_const_rebuilt);\n    \n        let potential_methods = findAllOccurrences(below_const_rebuilt, \"){\");\n    \n        // find no arguments methods\n        let no_args_methods = findAllOccurrences(below_const_rebuilt, \"(){\");\n        let non_args_methods = {};\n        for(let i =0; i<no_args_methods.length; i++) {\n            let type_and_name = []\n            if(i==0){\n                type_and_name = below_const_rebuilt.substring(0, no_args_methods[i]).split(\" \");\n            }else{\n                type_and_name = below_const_rebuilt.substring(no_args_methods[i-1]+3, no_args_methods[i]).split(\" \");\n            }\n    \n            non_args_methods[type_and_name[type_and_name.length-1]] = {\n                return_type: type_and_name[type_and_name.length-2]\n            };\n        }\n    \n        // find argumented methods\n        // remove all the empty args methods positions\n        for(let i =0; i<no_args_methods.length; i++){\n            if(potential_methods.includes(no_args_methods[i]+1)){\n                let index = potential_methods.indexOf(no_args_methods[i]+1);\n                potential_methods.splice(index, 1);\n            }\n        }\n    \n        let args_methods = {};\n        for(let i =0; i<potential_methods.length; i++){\n            let open_brac_pos = 0;\n            let count_strs = potential_methods[i];\n            while(open_brac_pos==0){\n                let current_char = below_const_rebuilt.substring(count_strs, count_strs+1);\n                if(current_char==\"(\"){\n                    open_brac_pos = count_strs;\n                    break;\n                }else{\n                    count_strs = count_strs-1;\n                }\n            }\n    \n            let args_str = below_const_rebuilt.substring(open_brac_pos+1, potential_methods[i]);\n            let multi_args_arr = [];\n            let single_args_arr = [];\n            if(args_str.includes(\",\")){\n                multi_args_arr = args_str.split(\",\");\n            }else{\n                single_args_arr = args_str.split(\" \");\n                let specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n                if(single_args_arr!=undefined){\n                    if(!(single_args_arr.length==2 && !specialChars.test(args_str))){\n                        single_args_arr = [];\n                    }\n                }\n \n            }\n    \n            \n            \n            let endtype_pos = 0;\n            let count_sp = open_brac_pos;\n            while(endtype_pos<=0){\n                let current_char = below_const_rebuilt.substring(count_sp, count_sp+1);\n                if(current_char==\" \"){\n                    endtype_pos = endtype_pos+1;\n                }else{\n                    count_sp = count_sp-1;\n                }\n            }\n    \n            let type_and_name = below_const_rebuilt.substring(endtype_pos, open_brac_pos).split(\" \");\n    \n    \n            if(single_args_arr.length>0){\n                args_methods[type_and_name[type_and_name.length-1]] = {\n                    return_type: type_and_name[type_and_name.length-2],\n                    arguments: args_str.split(\" \"),\n                };\n            }else{\n                \n                args_methods[type_and_name[type_and_name.length-1]] = {\n                    return_type: type_and_name[type_and_name.length-2],\n                    arguments: args_str.split(\" \"),\n                };\n            }\n        }\n    \n        return [args_methods, non_args_methods]\n    }else{\n        return []\n    }\n\n    //console.log(\"args methods: \"+JSON.stringify(args_methods));\n\n    //console.log(\"non args methods: \"+JSON.stringify(non_args_methods));\n    //console.log(\"trimed: \"+below_contructor.replace(/\\s/g, ''));\n    //console.log(findAllOccurrences(below_contructor, \"){\"));\n}\n\n//console.log(\"class name: \" + findClassName(java_code));\n//console.log(\"all variables: \"+JSON.stringify(findVariables()));\n//console.log(\"constructor: \"+ JSON.stringify(findConstructor()));\n//console.log(\"assigns: \"+JSON.stringify(getConstructorAssignments()));\n//findFunctions();","import React, { useState, useEffect, useRef  } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/mode/clike/clike'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport {FaJava} from 'react-icons/fa';\nimport {MdClear} from 'react-icons/md';\nimport {SiTypescript} from 'react-icons/si';\nimport {findClassName, findVariables,findFunctions} from './Converter';\nimport lottie from 'lottie-web';\nimport styled from 'styled-components';\n\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  const [open, setOpen] = useState(true)\n\n  const [active_file, setActiveFile] = useLocalStorage('activefile', 'Student.java');\n  const [files_data, setFilesData] = useLocalStorage('filesdata',{\n    'Student.java': `\n      package com.javacodeexamples.common;\n  \n      public class Student {\n      \n          /* Student properties */\n          private String rollNumber;\n          private String name;\n          private String standard;\n          private int totalMarks;\n          \n          //default constructor\n          public Student(){\n              \n          }\n          \n          /*\n          * overloaded constructor to set all \n          * student object properties at once\n          */\n          \n          public Student(String rollNumber, String name, String standard, int totalMarks){\n              \n              /*\n              * this.variable_name always refer to class level properties\n              */\n              \n              //set object properties from the arguments/parameters\n              this.rollNumber = rollNumber;\n              this.name = name;\n              this.standard = standard;\n              this.totalMarks = totalMarks;\n          }\n          \n          /* Methods to get and set the student properties */\n          public String getRollNumber() {\n              return rollNumber;\n          }\n      \n          public void setRollNumber(String rollNumber) {\n              this.rollNumber = rollNumber;\n          }\n      \n          public String getName() {\n              return name;\n          }\n          \n          public void setName(String name) {\n              this.name = name;\n          }\n          \n          public String getStandard() {\n              return standard;\n          }\n          \n          public void setStandard(String standard) {\n              this.standard = standard;\n          }\n          \n          public int getTotalMarks() {\n              return totalMarks;\n          }\n          \n          public void setTotalMarks(int totalMarks) {\n              this.totalMarks = totalMarks;\n          }\n          \n          /*\n          * This method will product nice summary of Student object\n          * when printed using System.out.println in the format below\n          * \n          * [01 : Raj : 10th : 200]\n          */\n          public String toString(){\n              \n              StringBuilder sbStudent = new StringBuilder();\n              \n              sbStudent.append(\"[\");\n              \n              sbStudent.append(getRollNumber());\n              sbStudent.append(\" : \");\n              sbStudent.append(getName());\n              sbStudent.append(\" : \");\n              sbStudent.append(getStandard());\n              sbStudent.append(\" : \");\n              sbStudent.append(getTotalMarks());\n              \n              sbStudent.append(\"]\");\n              \n              return sbStudent.toString();\n          }\n          \n      }\n    `,\n    'Node.java': `\n    package DevideAndConqurer;\n\n    public class Node {\n        public int data;\n        Node left_child;\n        Node right_child;\n        Node parent;\n\n        Node(int data) {\n            this.data = data;\n            left_child = null;\n            right_child = null;\n            parent = null;\n        }\n\n\n        public int getData() {\n            return data;\n        }\n\n        public void doStuff(int data) {\n            int ab = data;\n        }\n\n        public int doStuffAgain(int data, int left, int right) {\n            int abc = data;\n            return abc;\n        }\n\n        public Node getLeftChild() {\n            return left_child;\n        }\n\n        public Node getRightChild() {\n            return right_child;\n        }\n\n    }\n\n    `, \n    'Stack.java': `\n    package DevideAndConqurer;\n    import java.util.ArrayList;\n    \n    public class Stack {\n        private ArrayList<Node> stack;\n    \n        Stack(){\n            stack = new ArrayList<Node>();\n        }\n    \n        public void push(Node data) {\n            stack.add(data);\n        }\n    \n        public Node peek() {\n            return stack.get(stack.size()-1);\n        }\n    \n        public int getSize(){\n            return stack.size();\n        }\n    \n        public Node pop(){\n            Node top = stack.get(stack.size()-1);\n            stack.remove(stack.size()-1);\n            return top;\n        }\n    \n        public void show() {\n            for(int i=0; i<stack.size(); i++){\n                System.out.println(stack.get(i));\n            }\n        }\n    \n        public Boolean isEmpty() {\n            if(stack.size()==0){\n                return true;\n            }else{\n                return false;\n            }\n        }\n    \n    }\n    \n    `, \n    'Employee.java': `\n      import java.io.*;\n      public class Employee {\n      \n        String name;\n        int age;\n        String designation;\n        double salary;\n      \n        // This is the constructor of the class Employee\n        public Employee(String name) {\n            this.name = name;\n        }\n      \n        // Assign the age of the Employee  to the variable age.\n        public void empAge(int empAge) {\n            age = empAge;\n        }\n      \n        /* Assign the designation to the variable designation.*/\n        public void empDesignation(String empDesig) {\n            designation = empDesig;\n        }\n      \n        /* Assign the salary to the variable\tsalary.*/\n        public void empSalary(double empSalary) {\n            salary = empSalary;\n        }\n      \n        /* Print the Employee details */\n        public void printEmployee() {\n            System.out.println(\"Name:\"+ name );\n            System.out.println(\"Age:\" + age );\n            System.out.println(\"Designation:\" + designation );\n            System.out.println(\"Salary:\" + salary);\n        }\n      }\n    `});\n  const [java_editor, setJavaEditorData] = useState('');\n\n  // TypeScript interface\n  const [ts_editor, setTsEditor] = useState(`ts`);\n\n\n  String.prototype.interpolate = function(params) {\n    const names = Object.keys(params);\n    const vals = Object.values(params);\n    return new Function(...names, `return \\`${this}\\`;`)(...vals);\n  }\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n    const template = '${text}';\n    let code_val = template.interpolate({\n      text: value\n    });\n    handleUpdate(active_file,code_val);\n  }\n\n  const handleUpdate = (fn_value, filedata) => {\n    files_data[fn_value] = filedata;\n    setFilesData({ ...files_data });\n  }\n\n  // Set edito to its file\n  useEffect(() => {\n    setJavaEditorData(files_data[active_file]);\n  }, )\n\n\n  // Convertor\n  //console.log(Converter());\n  useEffect(() => {\n    try {\n      if(java_editor!=null || java_editor!=undefined) {\n        updateInterface(java_editor);\n      }\n    }\n    catch(err) {\n      console.log(err)\n    }\n\n    \n  }, )\n\n  const updateInterface = (java_code) => {\n    let class_name = findClassName(java_code);\n    let final_str = ``;\n\n    // class construction\n    let interface_line = \"interface \"+class_name+\" {\"+\"\\r\\n\";\n    let last_line = \"}\"\n\n    // Attributes construction\n    let final_attrs = ``;\n\n    let attrs = findVariables(java_code);\n    for (var key of Object.keys(attrs)) {\n      let attr_name = key;\n      let attr_type = \"\";\n      let att = attrs[key]\n      for (var key of Object.keys(att)) {\n        attr_type = att[key];\n      }\n\n      if(attr_type==\"int\" || attr_type==\"float\" || attr_type==\"double\" || attr_type==\"Double\"){\n        attr_type = \"number\"\n      }\n\n      if(attr_type==\"String\"){\n        attr_type = \"string\"\n      }\n\n      if(attr_type==\"Boolean\"){\n        attr_type = \"boolean\"\n      }\n\n      let attr_line = \"   \"+attr_name+\": \"+attr_type+\";\"+\"\\r\\n\";\n\n      final_attrs = final_attrs+attr_line;\n      \n    }\n\n    // Methods Construction\n    let final_methods = ``;\n\n    let all_methods = findFunctions(java_code);\n    let non_args_methods = all_methods[1];\n    let args_methods = all_methods[0];\n\n    for (var key of Object.keys(non_args_methods)) {\n      let attr_name = key;\n      let attr_type = \"\";\n      let att = non_args_methods[key]\n      for (var key of Object.keys(att)) {\n        attr_type = att[key];\n      }\n\n      let attr_line = \"   \"+attr_name+\": () => \"+attr_type+\";\"+\"\\r\\n\";\n\n      final_methods = final_methods+attr_line;\n\n    }\n\n\n    for (var key of Object.keys(args_methods)) {\n      let attr_name = key;\n      let attr_type = \"\";\n      let return_type = \"\";\n      let att = args_methods[key]\n      for (var key of Object.keys(att)) {\n        if(key==\"return_type\"){\n          return_type = att[key];\n        }else{\n          attr_type = att[key];\n\n          \n        }\n      }\n\n      let args_str = \"\";\n      for(let i=0; i<attr_type.length; i = i+2){\n        let the_type = attr_type[i];\n\n        if(the_type==\"int\" || the_type==\"float\" || the_type==\"double\" || the_type==\"Double\"){\n          the_type = \"number\"\n        }\n\n        if(the_type==\"String\"){\n          the_type = \"string\"\n        }\n\n        if(the_type==\"Boolean\"){\n          the_type = \"boolean\"\n        }\n\n        let argu = \"\";\n        if(attr_type[i+1]!=undefined){\n          argu = attr_type[i+1].replace(',', '')+\": \"+the_type+\", \";\n          if(i+2==attr_type.length){\n            argu = attr_type[i+1].replace(',', '')+\": \"+the_type+\"\";\n          }\n        }else{\n          argu = attr_type[i+1]+\": \"+the_type+\", \";\n          if(i+2==attr_type.length){\n            argu = attr_type[i+1]+\": \"+the_type+\"\";\n          }\n        }\n\n        \n        args_str = args_str+argu;\n      }\n      //console.log(\"args str: \"+args_str);\n\n      let attr_line = \"   \"+attr_name+\": (\"+args_str+\") => \"+return_type+\";\"+\"\\r\\n\";\n      //console.log(\"i: \"+attr_line);\n\n      let garbarge_stuff = attr_line.includes(\"undefined\") || attr_line.includes(\"if(\") || attr_line.includes(\"for(\") || attr_line.includes(\"i++\") || attr_line.includes(\"==\");\n      if(!garbarge_stuff){\n        final_methods = final_methods+attr_line;\n      }\n\n      \n\n    }\n\n\n    // Final construction\n    final_str = interface_line+\"\\r\\n\"+final_attrs+\"\\r\\n\"+final_methods+\"\\r\\n\"+last_line+\"\\r\\n\";\n    setTsEditor(final_str);\n  }\n\n\n  // Animations\n  const container = useRef(null);\n  const [loading, setLoading] = useState(true);\n\n  // LoadingOverlay\n\n\n  useEffect(() => {\n      lottie.loadAnimation({\n          container: container.current,\n          render: 'svg',\n          loop: true,\n          autoplay: true,\n          animationData: require('../animations/scan.json')\n      })\n  }, []);\n\n\n  setTimeout(() => {\n      setLoading(false);\n  }, 3000);\n\n\n\n\n\n  return (\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      {(props.ts &&String.active_file!==\"non\")?\n      \n        <div className=\"editor-subtitle-container\">\n          <div className=\"editor-subtitle\">\n            <SiTypescript className=\"lang_icon ts_icon\"/>\n            {String(active_file.substring(0, String(active_file).indexOf(\".java\")))+\"Interface.ts\"}\n          </div>\n        </div>\n      :\n        (String(active_file)!==\"non\")? \n        <div className=\"editor-subtitle-container\">\n          <div className=\"editor-subtitle\">\n            <FaJava className=\"lang_icon\"/>\n            {active_file}\n            <MdClear className=\"rvmfile_btn\" onClick={() => {\n              setActiveFile(\"non\");\n              window.location.reload();\n            }}/>\n          </div>\n          <div>\n            <RunBtn onClick={() => window.location.reload()}>\n              Scan\n            </RunBtn>\n          </div>\n        </div>\n        :\n        null\n        \n\n      }\n\n\n      {props.ts?\n        (loading?\n          null\n        :\n        <ControlledEditor\n          onBeforeChange={handleChange}\n          value={ts_editor}\n          className=\"code-mirror-wrapper\"\n          options={{\n            lineWrapping: true,\n            lint: true,\n            mode: language,\n            theme: 'material',\n            lineNumbers: true\n          }}\n        />\n        )\n\n      :\n      (loading?\n        <>\n        <LoadingOverlay>\n          <div ref={container}></div>\n        </LoadingOverlay>\n          <ControlledEditor\n          onBeforeChange={handleChange}\n          value={java_editor}\n          className=\"code-mirror-wrapper\"\n          options={{\n            lineWrapping: true,\n            lint: true,\n            mode: language,\n            theme: 'material',\n            lineNumbers: true\n          }}\n        />\n        </>\n      :\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={java_editor}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      /> \n      )\n\n      }\n\n    </div>\n  )\n}\n\nconst LoadingOverlay = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    z-index: 12;\n    align-self: center;\n    width: -webkit-fill-available;\n    height: -webkit-fill-available;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    div {\n        transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n        align-self: self-start;\n        margin-top: 80px;\n        width: 40%;\n    }\n`;\n\nconst RunBtn = styled.div`\n    font-size: 12px;\n    border-radius: 4px;\n    padding: 8px 12px;\n    background: #0971f1;\n    color: #ffffff;\n    margin-right: 15px;\n    cursor: pointer;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n    &:hover {\n      opacity: 0.8;\n    }\n`;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {VscTriangleRight} from 'react-icons/vsc';\nimport {FaFileUpload} from 'react-icons/fa';\nimport {AiFillFileAdd} from 'react-icons/ai';\nimport {HiUpload} from 'react-icons/hi';\nimport $ from \"jquery\";\nimport {RiCupFill} from 'react-icons/ri';\nimport {HiPencil} from 'react-icons/hi';\nimport {MdOutlineClear} from 'react-icons/md';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport {AiFillFile} from 'react-icons/ai';\n\nconst Files = (props) => {\n\n  const [upload_hover, setUploadHover] = useState(false);\n  const [file_hover, setFileHover] = useState(false);\n  const [file_input, setFileInput] = useState(false);\n  const [active_file, setActiveFile] = useLocalStorage('activefile', 'Student.java');\n  const [filelist_hover, setFileListHover] = useState(\"nbs\");\n  const [files, setFiles] = useLocalStorage('filenames', ['Student.java','Node.java', 'Stack.java', 'Employee.java']);\n\n\n  const [fn_value, setFnValue] = useState(``);\n\n\n\n\n  return (\n    <FilesContainer>\n        <CollapseItem>\n          <TopItem>\n            <CollapseLabel>\n              <VscTriangleRight className=\"triangle_icon\"/>\n              <p className=\"files_label\">Files</p>\n            </CollapseLabel>\n            <UploadFiles>\n              <AiFillFileAdd className=\"addfiles_icon\" onMouseOver={() => {setFileHover(!file_hover)}} onMouseOut={() => {setFileHover(!file_hover)}} onClick={() => {setFiles([...files, ``])}}/>\n              {file_hover ? <p className=\"file_upload\">New File</p>: null}\n            </UploadFiles>\n          </TopItem>\n          <BottomItems>\n\n            {\n              files.map(function(item, i){\n                if(item.length>0){\n                  return (\n                    <File key={i} className={active_file==item ? \"active_file\" : null} onMouseOver={() => {setFileListHover(item)}} onMouseOut={() => {setFileListHover(\"n\"+item)}}>\n                    <FileName onClick={() => {\n                      setActiveFile(item);\n                      window.location.reload();\n                      }} >\n                      <RiCupFill/>\n                      <p>{item}</p>\n                    </FileName>\n      \n                    <UploadFiles className={(filelist_hover==item) ? null : \"active_file_icons_inv\"} >\n                        <div className=\"cancel_icon\">\n                        <MdOutlineClear onClick={() =>{\n                              let temp_arr = files;\n                              var filtered = temp_arr.filter(function(value, index, arr){ \n                                  return value != filelist_hover;\n                              });\n                              console.log(\"ftemp: \"+temp_arr)\n                              console.log(\"filt: \"+filtered)\n    \n                              setFiles([...filtered]);\n                              setFileListHover(\"n\"+item);\n                              if(filelist_hover==active_file){\n                                setActiveFile(\"non\");\n                                window.location.reload();\n                              }\n                              \n                        }}/>\n                        </div>\n                    </UploadFiles>\n                  </File>\n      \n                  );\n                }else{\n                  return (\n                    <File className={!file_input ? \"file_input\" : null} onMouseOver={() => {setFileInput(!file_input)}} onMouseOut={() => {setFileInput(!file_input)}}>\n                    <FileName>\n                      <AiFillFile/>\n                      <input type=\"text\" value={fn_value} onChange={e => {\n                        setFnValue(`${e.target.value}`);\n                        }} onBlur={() => {\n                          \n                          if(fn_value<1){\n                            let temp_arr = files;\n                            temp_arr.pop();\n\n                            setFiles([...temp_arr])\n                          }\n                        } } autoFocus/>\n                    </FileName>\n      \n                    <UploadFiles className={((fn_value.length>0 && String(fn_value).includes(\".java\"))) ? null : \"active_file_icons_inv\"} >\n                        <div className=\"pen_icon save_txt\" onClick={() => {\n\n                          let temp_arr = files;\n                          temp_arr.pop();\n\n                          setFiles([...temp_arr])\n                          setFiles([...files, fn_value]);\n                          setFnValue(``);\n                          setFileInput(false);\n                          }}>\n                          Save\n                        </div>\n                    </UploadFiles>\n                  </File>\n      \n                  );\n                }\n\n              })\n            }\n          </BottomItems>\n        </CollapseItem>\n    </FilesContainer>\n  )\n}\n\nexport default Files\n\nconst FilesContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 20%;\n    color: #ffffff;\n    border-top: 1px solid #343434;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    \n`;\n\nconst CollapseItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n  }\n`;\n\nconst TopItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #343434;\n  padding: 0.7rem 0.7rem 0.7rem 1.1rem;\n  \n`;\nconst CollapseLabel = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  \n\n\n  .files_label {\n    margin-left: 7px;\n  }\n\n  p {\n    font-size: 1rem;\n    font-weight: 200;\n  }\n\n  .triangle_icon {\n    transform: rotate(90deg);\n    width: 20px;\n    color: #ffffff80;\n  }\n\n`;\n\nconst UploadFiles = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  color: #ffffff80;\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n  \n\n  .upload_icon {\n    margin-right: 20px;\n  }\n\n  .hover_upload, .file_upload {\n    position: absolute;\n    background: #343434;\n    border-radius: 4px;\n    padding: 8px;\n    font-size: 13px;\n    color: #ffffff;\n    width: max-content;\n    top: -40px;\n    right: 3px;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n  }\n  .file_upload {\n    right: -25px;\n  }\n\n  .upload_icon {\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    cursor: pointer;\n    &:hover {\n      color: #ffffff;\n      transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    }\n\n\n  }\n\n  .addfiles_icon {\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    cursor: pointer;\n    &:hover {\n      color: #ffffff;\n      transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    }\n  }\n\n  .save_txt {\n    &:hover {\n      color: #ffffff;\n    }\n  }\n\n`;\n\nconst BottomItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n  .active_file {\n    background: #343434;\n    p {\n      color: #ffffff;\n    }\n  }\n\n  .file_input {\n    background: #343434;\n  }\n`;\n\nconst File = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  padding: 15px;\n  color: #f54336;\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n  \n  .pen_icon, .cancel_icon {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n    & :hover {\n      color: #ffffff;\n    }\n  }\n\n  .active_file_icons_inv {\n    display: none;\n  }\n\n  .pen_icon {\n    margin-right: 8px;\n  }\n`;\n\nconst FileName = styled.div`\n\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n\n  p {\n    font-size: 14px;\n    color: #ffffff80;\n    margin: 0px;\n    margin-left: 10px;\n    font-weight: 100;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n\n  }\n\n  input {\n    margin-left: 10px;\n    background: #343434;\n    color: #ffffff;\n    border: 1px solid #151515;\n    height: 22px;\n    text-indent: 6px;\n\n    &:active {\n      background: #343434;\n      color: #ffffff;\n      border: 1px solid #151515;\n      border-radius: 1px;\n    }\n\n    &:focus {\n      outline: -webkit-focus-ring-color auto 0px;\n    }\n\n    &:focus-visible {\n      outline: -webkit-focus-ring-color auto 0px;\n    }\n  }\n\n  &:hover {\n    p {\n      color: #ffffff;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport Files from './Files';\nimport {AiOutlineScan} from 'react-icons/ai';\nimport {AiFillHeart} from 'react-icons/ai';\nimport {BsGithub} from 'react-icons/bs';\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [java, setJava] = useLocalStorage('java', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  \n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${java}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, java, js]);\n\n  return (\n    <>\n      <div className=\"pane btns_container\">\n        <div className=\"top_panel\">\n            <AiOutlineScan className=\"scan_icon\"/>\n            <p>Scanner Codepen</p>\n        </div>\n        <div className=\"top_panel\">\n          <p>Generate TypeScript Interface from a Java Object Orientated Program</p>\n          <AiFillHeart className=\"heart_icon\"/>\n        </div>\n        <div className=\"top_panel\">\n        <a href={`https://github.com/simamkele44/codepen`} className=\"git_icon_container\" target='_blank'><BsGithub className=\"git_icon\"/></a>\n          \n        </div>\n      </div>\n      <div className=\"pane top-pane\">\n        <Files/>\n        <Editor\n          language=\"text/x-java\"\n          displayName=\"Java OOP\"\n          value={java}\n          onChange={setJava}\n        />\n        <Editor\n          language=\"text/typescript\"\n          displayName=\"TypeScript Interface\"\n          value={js}\n          onChange={setJs}\n          ts={true}\n        />\n      </div>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}